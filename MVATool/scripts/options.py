import ROOT
from collections import OrderedDict


# Grid Search
# DNN:
# nLayer
# nBatch
# L2 norm
#
#
# BDT:
# nTrees
# shrinkage
#
#



options = OrderedDict({
  'DNN_High_year_comb_Batch500' : {
    'train_year' : 'year_comb',
    'train_samples' :  ['TTLJ_powheg_Train', 'TTLJ_powheg_Test', 'CHToCB_High_Train', 'CHToCB_High_Test', ],
    'variables' : {'include_mass_label':False, 'include_dijet_pt':True },
    'factory' : {
      'name' : "TMVAClassification_DNN_High_year_comb_Batch500",
      'options' : ":".join(["!V",
  	                  "!Silent",
  			  "Color",
  			  "DrawProgressBar",
  			  "Transformations=I",
  			  "AnalysisType=Classification",
  		         ]),
      #'weight' : "",
      #'weight' : "1.",
      'weight' : "XSWeight",
    },
  
    'prepareTrees' : ":".join([
                   #"SplitMode=Alternate",
                   #"SplitMode=Random",
                   #"MixMode=Random",
  			     "!V",
  			     #"nTrain_Signal=20000",
  			     #"nTrain_Background=20000",
  			     #"nTest_Signal=40000",
  			     #"nTest_Background=40000",
               	            ]),
    'bookMethod' : [
      {
        'type' : ROOT.TMVA.Types.kPyKeras,
        'name' : "DNN",
        'options' : ":".join(["H",
                              "!V",
          		    #"VarTransform=N,D",
          		    "VarTransform=N",
          		    "FilenameModel=model_DNN_High_year_comb_Batch500.h5",
          		    "NumEpochs=100",
                      "SaveBestOnly=true",
          		    "BatchSize=500",
                      "verbose=2",
                      "TriesEarlyStopping=1",
                      #"LearningRateSchedule=1,0.001;2,0.002;3,0.003;4,0.004;5,0.005;10,0.001",
                      #"ValidationSize=0.2",
          	           ]),
      },
    ],
  },     
        
  'DNN_Low_year_comb_Batch500' : {
    'train_year' : 'year_comb',
    'train_samples' :  ['TTLJ_powheg_Train', 'TTLJ_powheg_Test', 'CHToCB_Low_Train', 'CHToCB_Low_Test', ],
    'variables' : {'include_mass_label':False, 'include_dijet_pt':True },
    'factory' : {
      'name' : "TMVAClassification_DNN_Low_year_comb_Batch500",
      'options' : ":".join(["!V",
  	                  "!Silent",
  			  "Color",
  			  "DrawProgressBar",
  			  "Transformations=I",
  			  "AnalysisType=Classification",
  		         ]),
      #'weight' : "",
      #'weight' : "1.",
      'weight' : "XSWeight",
    },
  
    'prepareTrees' : ":".join([
                   #"SplitMode=Alternate",
                   #"SplitMode=Random",
                   #"MixMode=Random",
  			     "!V",
  			     #"nTrain_Signal=20000",
  			     #"nTrain_Background=20000",
  			     #"nTest_Signal=40000",
  			     #"nTest_Background=40000",
               	            ]),
    'bookMethod' : [
      {
        'type' : ROOT.TMVA.Types.kPyKeras,
        'name' : "DNN",
        'options' : ":".join(["H",
                              "!V",
          		    #"VarTransform=N,D",
          		    "VarTransform=N",
          		    "FilenameModel=model_DNN_Low_year_comb_Batch500.h5",
          		    "NumEpochs=100",
                      "SaveBestOnly=true",
          		    "BatchSize=500",
                      "verbose=2",
                      "TriesEarlyStopping=1",
                      #"LearningRateSchedule=1,0.001;2,0.002;3,0.003;4,0.004;5,0.005;10,0.001",
                      #"ValidationSize=0.2",
          	           ]),
      },
    ],
  },
  'DNN_High_year_comb_Batch1000' : {
    'train_year' : 'year_comb',
    'train_samples' :  ['TTLJ_powheg_Train', 'TTLJ_powheg_Test', 'CHToCB_High_Train', 'CHToCB_High_Test', ],
    'variables' : {'include_mass_label':False, 'include_dijet_pt':True },
    'factory' : {
      'name' : "TMVAClassification_DNN_High_year_comb_Batch1000",
      'options' : ":".join(["!V",
  	                  "!Silent",
  			  "Color",
  			  "DrawProgressBar",
  			  "Transformations=I",
  			  "AnalysisType=Classification",
  		         ]),
      #'weight' : "",
      #'weight' : "1.",
      'weight' : "XSWeight",
    },
  
    'prepareTrees' : ":".join([
                   #"SplitMode=Alternate",
                   #"SplitMode=Random",
                   #"MixMode=Random",
  			     "!V",
  			     #"nTrain_Signal=20000",
  			     #"nTrain_Background=20000",
  			     #"nTest_Signal=40000",
  			     #"nTest_Background=40000",
               	            ]),
    'bookMethod' : [
      {
        'type' : ROOT.TMVA.Types.kPyKeras,
        'name' : "DNN",
        'options' : ":".join(["H",
                              "!V",
          		    #"VarTransform=N,D",
          		    "VarTransform=N",
          		    "FilenameModel=model_DNN_High_year_comb_Batch1000.h5",
          		    "NumEpochs=100",
                      "SaveBestOnly=true",
          		    "BatchSize=1000",
                      "verbose=2",
                      "TriesEarlyStopping=1",
                      #"LearningRateSchedule=1,0.001;2,0.002;3,0.003;4,0.004;5,0.005;10,0.001",
                      #"ValidationSize=0.2",
          	           ]),
      },
    ],
  },     
        
  'DNN_Low_year_comb_Batch1000' : {
    'train_year' : 'year_comb',
    'train_samples' :  ['TTLJ_powheg_Train', 'TTLJ_powheg_Test', 'CHToCB_Low_Train', 'CHToCB_Low_Test', ],
    'variables' : {'include_mass_label':False, 'include_dijet_pt':True },
    'factory' : {
      'name' : "TMVAClassification_DNN_Low_year_comb_Batch1000",
      'options' : ":".join(["!V",
  	                  "!Silent",
  			  "Color",
  			  "DrawProgressBar",
  			  "Transformations=I",
  			  "AnalysisType=Classification",
  		         ]),
      #'weight' : "",
      #'weight' : "1.",
      'weight' : "XSWeight",
    },
  
    'prepareTrees' : ":".join([
                   #"SplitMode=Alternate",
                   #"SplitMode=Random",
                   #"MixMode=Random",
  			     "!V",
  			     #"nTrain_Signal=20000",
  			     #"nTrain_Background=20000",
  			     #"nTest_Signal=40000",
  			     #"nTest_Background=40000",
               	            ]),
    'bookMethod' : [
      {
        'type' : ROOT.TMVA.Types.kPyKeras,
        'name' : "DNN",
        'options' : ":".join(["H",
                              "!V",
          		    #"VarTransform=N,D",
          		    "VarTransform=N",
          		    "FilenameModel=model_DNN_Low_year_comb_Batch1000.h5",
          		    "NumEpochs=100",
                      "SaveBestOnly=true",
          		    "BatchSize=1000",
                      "verbose=2",
                      "TriesEarlyStopping=1",
                      #"LearningRateSchedule=1,0.001;2,0.002;3,0.003;4,0.004;5,0.005;10,0.001",
                      #"ValidationSize=0.2",
          	           ]),
      },
    ],
  },
  'DNN_High_year_comb_Batch2000' : {
    'train_year' : 'year_comb',
    'train_samples' :  ['TTLJ_powheg_Train', 'TTLJ_powheg_Test', 'CHToCB_High_Train', 'CHToCB_High_Test', ],
    'variables' : {'include_mass_label':False, 'include_dijet_pt':True },
    'factory' : {
      'name' : "TMVAClassification_DNN_High_year_comb_Batch2000",
      'options' : ":".join(["!V",
  	                  "!Silent",
  			  "Color",
  			  "DrawProgressBar",
  			  "Transformations=I",
  			  "AnalysisType=Classification",
  		         ]),
      #'weight' : "",
      #'weight' : "1.",
      'weight' : "XSWeight",
    },
  
    'prepareTrees' : ":".join([
                   #"SplitMode=Alternate",
                   #"SplitMode=Random",
                   #"MixMode=Random",
  			     "!V",
  			     #"nTrain_Signal=20000",
  			     #"nTrain_Background=20000",
  			     #"nTest_Signal=40000",
  			     #"nTest_Background=40000",
               	            ]),
    'bookMethod' : [
      {
        'type' : ROOT.TMVA.Types.kPyKeras,
        'name' : "DNN",
        'options' : ":".join(["H",
                              "!V",
          		    #"VarTransform=N,D",
          		    "VarTransform=N",
          		    "FilenameModel=model_DNN_High_year_comb_Batch2000.h5",
          		    "NumEpochs=100",
                      "SaveBestOnly=true",
          		    "BatchSize=2000",
                      "verbose=2",
                      "TriesEarlyStopping=1",
                      #"LearningRateSchedule=1,0.001;2,0.002;3,0.003;4,0.004;5,0.005;10,0.001",
                      #"ValidationSize=0.2",
          	           ]),
      },
    ],
  },     
        
  'DNN_Low_year_comb_Batch2000' : {
    'train_year' : 'year_comb',
    'train_samples' :  ['TTLJ_powheg_Train', 'TTLJ_powheg_Test', 'CHToCB_Low_Train', 'CHToCB_Low_Test', ],
    'variables' : {'include_mass_label':False, 'include_dijet_pt':True },
    'factory' : {
      'name' : "TMVAClassification_DNN_Low_year_comb_Batch2000",
      'options' : ":".join(["!V",
  	                  "!Silent",
  			  "Color",
  			  "DrawProgressBar",
  			  "Transformations=I",
  			  "AnalysisType=Classification",
  		         ]),
      #'weight' : "",
      #'weight' : "1.",
      'weight' : "XSWeight",
    },
  
    'prepareTrees' : ":".join([
                   #"SplitMode=Alternate",
                   #"SplitMode=Random",
                   #"MixMode=Random",
  			     "!V",
  			     #"nTrain_Signal=20000",
  			     #"nTrain_Background=20000",
  			     #"nTest_Signal=40000",
  			     #"nTest_Background=40000",
               	            ]),
    'bookMethod' : [
      {
        'type' : ROOT.TMVA.Types.kPyKeras,
        'name' : "DNN",
        'options' : ":".join(["H",
                              "!V",
          		    #"VarTransform=N,D",
          		    "VarTransform=N",
          		    "FilenameModel=model_DNN_Low_year_comb_Batch2000.h5",
          		    "NumEpochs=100",
                      "SaveBestOnly=true",
          		    "BatchSize=2000",
                      "verbose=2",
                      "TriesEarlyStopping=1",
                      #"LearningRateSchedule=1,0.001;2,0.002;3,0.003;4,0.004;5,0.005;10,0.001",
                      #"ValidationSize=0.2",
          	           ]),
      },
    ],
  },
  'DNN_High_year_comb_Batch4000' : {
    'train_year' : 'year_comb',
    'train_samples' :  ['TTLJ_powheg_Train', 'TTLJ_powheg_Test', 'CHToCB_High_Train', 'CHToCB_High_Test', ],
    'variables' : {'include_mass_label':False, 'include_dijet_pt':True },
    'factory' : {
      'name' : "TMVAClassification_DNN_High_year_comb_Batch4000",
      'options' : ":".join(["!V",
  	                  "!Silent",
  			  "Color",
  			  "DrawProgressBar",
  			  "Transformations=I",
  			  "AnalysisType=Classification",
  		         ]),
      #'weight' : "",
      #'weight' : "1.",
      'weight' : "XSWeight",
    },
  
    'prepareTrees' : ":".join([
                   #"SplitMode=Alternate",
                   #"SplitMode=Random",
                   #"MixMode=Random",
  			     "!V",
  			     #"nTrain_Signal=20000",
  			     #"nTrain_Background=20000",
  			     #"nTest_Signal=40000",
  			     #"nTest_Background=40000",
               	            ]),
    'bookMethod' : [
      {
        'type' : ROOT.TMVA.Types.kPyKeras,
        'name' : "DNN",
        'options' : ":".join(["H",
                              "!V",
          		    #"VarTransform=N,D",
          		    "VarTransform=N",
          		    "FilenameModel=model_DNN_High_year_comb_Batch4000.h5",
          		    "NumEpochs=100",
                      "SaveBestOnly=true",
          		    "BatchSize=4000",
                      "verbose=2",
                      "TriesEarlyStopping=1",
                      #"LearningRateSchedule=1,0.001;2,0.002;3,0.003;4,0.004;5,0.005;10,0.001",
                      #"ValidationSize=0.2",
          	           ]),
      },
    ],
  },     
        
  'DNN_Low_year_comb_Batch4000' : {
    'train_year' : 'year_comb',
    'train_samples' :  ['TTLJ_powheg_Train', 'TTLJ_powheg_Test', 'CHToCB_Low_Train', 'CHToCB_Low_Test', ],
    'variables' : {'include_mass_label':False, 'include_dijet_pt':True },
    'factory' : {
      'name' : "TMVAClassification_DNN_Low_year_comb_Batch4000",
      'options' : ":".join(["!V",
  	                  "!Silent",
  			  "Color",
  			  "DrawProgressBar",
  			  "Transformations=I",
  			  "AnalysisType=Classification",
  		         ]),
      #'weight' : "",
      #'weight' : "1.",
      'weight' : "XSWeight",
    },
  
    'prepareTrees' : ":".join([
                   #"SplitMode=Alternate",
                   #"SplitMode=Random",
                   #"MixMode=Random",
  			     "!V",
  			     #"nTrain_Signal=20000",
  			     #"nTrain_Background=20000",
  			     #"nTest_Signal=40000",
  			     #"nTest_Background=40000",
               	            ]),
    'bookMethod' : [
      {
        'type' : ROOT.TMVA.Types.kPyKeras,
        'name' : "DNN",
        'options' : ":".join(["H",
                              "!V",
          		    #"VarTransform=N,D",
          		    "VarTransform=N",
          		    "FilenameModel=model_DNN_Low_year_comb_Batch4000.h5",
          		    "NumEpochs=100",
                      "SaveBestOnly=true",
          		    "BatchSize=4000",
                      "verbose=2",
                      "TriesEarlyStopping=1",
                      #"LearningRateSchedule=1,0.001;2,0.002;3,0.003;4,0.004;5,0.005;10,0.001",
                      #"ValidationSize=0.2",
          	           ]),
      },
    ],
  },
  'BDT_High_year_comb' : {
    'train_year' : 'year_comb',
    'train_samples' :  ['TTLJ_powheg_Train', 'TTLJ_powheg_Test', 'CHToCB_High_Train', 'CHToCB_High_Test', ],
    'variables' : {'include_mass_label':False, 'include_dijet_pt':True },
    'factory' : {
      'name' : "TMVAClassification_BDT_High_year_comb",
      'options' : ":".join(["!V",
  	                  "!Silent",
  			  "Color",
  			  "DrawProgressBar",
  			  "Transformations=I",
  			  "AnalysisType=Classification",
  		         ]),
      #'weight' : "",
      #'weight' : "1.",
      'weight' : "XSWeight",
    },
  
    'prepareTrees' : ":".join([
                   #"SplitMode=Alternate",
                   #"SplitMode=Random",
                   #"MixMode=Random",
  			     "!V",
  			     #"nTrain_Signal=20000",
  			     #"nTrain_Background=20000",
  			     #"nTest_Signal=40000",
  			     #"nTest_Background=40000",
               	            ]),
    'bookMethod' : [
      {
        'type' : ROOT.TMVA.Types.kBDT,
        'name' : "BDT",
        'options' : ":".join(["!H",
                              "!V",
  			    #"VarTransform=N,D",
  			    "VarTransform=N",
                     	"NTrees=400",
          		    "MaxDepth=2",
                      "UseBaggedGrad=True",
                      "BaggedSampleFraction=0.5",
  			        "MinNodeSize=5%",
                      "Shrinkage=0.1",
          		    "BoostType=Grad",
          		    "SeparationType=GiniIndex",
                      #"IgnoreNegWeightsInTraining=True",
                      "NegWeightTreatment=InverseBoostNegWeights",
          		    "nCuts=100",
          		    "PruneMethod=NoPruning",
          	           ])
      },
    ],
  },     

  'BDT_Low_year_comb' : {
    'train_year' : 'year_comb',
    'train_samples' :  ['TTLJ_powheg_Train', 'TTLJ_powheg_Test', 'CHToCB_Low_Train', 'CHToCB_Low_Test', ],
    'variables' : {'include_mass_label':False, 'include_dijet_pt':True },
    'factory' : {
      'name' : "TMVAClassification_BDT_Low_year_comb",
      'options' : ":".join(["!V",
  	                  "!Silent",
  			  "Color",
  			  "DrawProgressBar",
  			  "Transformations=I",
  			  "AnalysisType=Classification",
  		         ]),
      #'weight' : "",
      #'weight' : "1.",
      'weight' : "XSWeight",
    },
  
    'prepareTrees' : ":".join([
                   #"SplitMode=Alternate",
                   #"SplitMode=Random",
                   #"MixMode=Random",
  			     "!V",
  			     #"nTrain_Signal=20000",
  			     #"nTrain_Background=20000",
  			     #"nTest_Signal=40000",
  			     #"nTest_Background=40000",
               	            ]),
    'bookMethod' : [
      {
        'type' : ROOT.TMVA.Types.kBDT,
        'name' : "BDT",
        'options' : ":".join(["!H",
                              "!V",
  			    #"VarTransform=N,D",
  			    "VarTransform=N",
                     	"NTrees=800",
          		    "MaxDepth=2",
                      "UseBaggedGrad=True",
                      "BaggedSampleFraction=0.5",
  			        "MinNodeSize=5%",
                      "Shrinkage=0.01",
          		    "BoostType=Grad",
          		    "SeparationType=GiniIndex",
                      #"IgnoreNegWeightsInTraining=True",
                      "NegWeightTreatment=InverseBoostNegWeights",
          		    "nCuts=100",
          		    "PruneMethod=NoPruning",
          	           ])
      },
    ],
  },  

  
})


options_High = {
  'factory' : {
    'name' : "TMVAClassification",
    'options' : ":".join(["!V",
	                  "!Silent",
			  "Color",
			  "DrawProgressBar",
			  "Transformations=I",
			  "AnalysisType=Classification",
		         ]),
    #'weight' : "",
    #'weight' : "1.",
    'weight' : "XSWeight",
  },

  'prepareTrees' : ":".join([
                 #"SplitMode=Alternate",
                 #"SplitMode=Random",
                 #"MixMode=Random",
			     "!V",
			     #"nTrain_Signal=20000",
			     #"nTrain_Background=20000",
			     #"nTest_Signal=40000",
			     #"nTest_Background=40000",
             	            ]),
  'bookMethod' : [
    {
      'type' : ROOT.TMVA.Types.kPyKeras,
      'name' : "DNN",
      'options' : ":".join(["H",
                            "!V",
        		    #"VarTransform=N,D",
        		    "VarTransform=G",
        		    "FilenameModel=model.h5",
        		    "NumEpochs=50",
                    "SaveBestOnly=true",
        		    "BatchSize=1024",
                    "verbose=2",
                    "TriesEarlyStopping=4",
                    #"LearningRateSchedule=1,0.001;2,0.002;3,0.003;4,0.004;5,0.005;10,0.001",
                    #"ValidationSize=0.2", #why this option is not found? root version?
        	           ]),
    },
    {
      'type' : ROOT.TMVA.Types.kBDT,
      'name' : "BDT",
      'options' : ":".join(["!H",
                            "!V",
			    #"VarTransform=N,D",
			    "VarTransform=N",
                   	    "NTrees=800",
        		    "MaxDepth=2",
                    "UseBaggedGrad=True",
                    "BaggedSampleFraction=0.5",
			        "MinNodeSize=4%",
                    "Shrinkage=0.01",
        		    "BoostType=Grad",
        		    "SeparationType=GiniIndex",
                    #"IgnoreNegWeightsInTraining=True",
                    "NegWeightTreatment=InverseBoostNegWeights",
        		    "nCuts=100",
        		    "PruneMethod=NoPruning",
        	           ])
    },
  ],

}

options_Low = {
  'factory' : {
    'name' : "TMVAClassification",
    'options' : ":".join(["!V",
	                  "!Silent",
			  "Color",
			  "DrawProgressBar",
			  "Transformations=I",
			  "AnalysisType=Classification",
		         ]),
    #'weight' : "",
    #'weight' : "1.",
    'weight' : "XSWeight",
  },

  'prepareTrees' : ":".join([
                 #"SplitMode=Alternate",
                 #"SplitMode=Random",
                 #"MixMode=Random",
			     "!V",
			     #"nTrain_Signal=20000",
			     #"nTrain_Background=20000",
			     #"nTest_Signal=40000",
			     #"nTest_Background=40000",
             	            ]),
  'bookMethod' : [
    {
      'type' : ROOT.TMVA.Types.kPyKeras,
      'name' : "DNN",
      'options' : ":".join(["H",
                            "!V",
        		    #"VarTransform=N,D",
        		    "VarTransform=N",
        		    "FilenameModel=model.h5",
        		    "NumEpochs=100",
                    "SaveBestOnly=true",
        		    "BatchSize=2000",
                    "verbose=2",
                    "TriesEarlyStopping=1",
                    #"LearningRateSchedule=1,0.001;2,0.002;3,0.003;4,0.004;5,0.005;10,0.001",
                    #"ValidationSize=0.2",
        	           ]),
    },
    {
      'type' : ROOT.TMVA.Types.kBDT,
      'name' : "BDT",
      'options' : ":".join(["!H",
                            "!V",
			    #"VarTransform=N,D",
			    "VarTransform=N",
                   	"NTrees=800",
        		    "MaxDepth=2",
                    "UseBaggedGrad=True",
                    "BaggedSampleFraction=0.5",
			        "MinNodeSize=5%",
                    "Shrinkage=0.01",
        		    "BoostType=Grad",
        		    "SeparationType=GiniIndex",
                    #"IgnoreNegWeightsInTraining=True",
                    "NegWeightTreatment=InverseBoostNegWeights",
        		    "nCuts=100",
        		    "PruneMethod=NoPruning",
        	           ])
    },
  ],
}
